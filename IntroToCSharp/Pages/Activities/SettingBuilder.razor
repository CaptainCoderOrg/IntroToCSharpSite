@inherits CaptainCoder.Page
@page "/activities/setting-builder"

<Title>Setting Builder</Title>

<Section Title="Introduction">

     <Adventure Portrait="@Portraits.Ryan_1">
        <Item>
            <AdventureDialog>
                    Hello! I am Ryan, one of Captian Coder's students! I see that you are
                    on your way to becoming a fully fledged program just like me! Maybe
                    you can help me with this code I've been struggling with.
            </AdventureDialog>
        </Item>
        <Item>
            <AdventureDialog>
                    Captian Coder tasked me with helping them plan out building a city for
                    all his students to be able to practice coding. A place where we could
                    share information and teach each other how to be better coders.
            </AdventureDialog>
        </Item>
        <Item>
            <AdventureDialog>
                    The only problem is that building a city is hard! I can never seem
                    to remember all the steps involved or keep track of all the details!
                    What would be really helpful is if we could make a program that could
                    keep track of all these details!
            </AdventureDialog>
        </Item>
        <Item>
            <AdventureDialog>
                    In the following activity you will create a program that will help me plan
                    out a city or town. you will prompt the user for information
                    and be able to save that information in a variable using <Code>Console.WriteLine</Code>,
                    <Code>Console.ReadLine</Code>, and the basics of <Code>variables</Code>.
            </AdventureDialog>
        </Item>
        <Item>
            <AdventureDialog>
                    If you haven't explored these concepts yet, why not checkout <b>@VariableBasics.PageRef.Name</b>
                    and <b>@UserInput.PageRef.Name</b>. Once you've practiced these skills then I am sure you'll be
                    able to help me! Don't be afraid to take a break and come back to the problem if you get stuck either,
                    I sure have!
            </AdventureDialog>
        </Item>
     </Adventure>
</Section>
    <Section Title="Learning Objectives">
    <MudList Clickable="true">
        <MudListItem Icon="@Icons.Filled.Circle">Practice using <Code>Console.WriteLine</Code> method.</MudListItem>
        <MudListItem Icon="@Icons.Filled.Circle">Practice working with <Code>strings</Code>.</MudListItem>
        <MudListItem Icon="@Icons.Filled.Circle">Practice working with <Code>integers</Code>.</MudListItem>
        <MudListItem Icon="@Icons.Filled.Circle">Practice changing the color of the terminal.</MudListItem>
    </MudList>
</Section>

<Section Title="Where to start?">
    <Text>
        When you think of many of your favorite games what comes to mind? Perhaps you think of an astronaut
        flying through an astreroid field in space like in No Man's Sky. Or maybe you think of a plumber jumping
        on evil turtles to Store a princess like Mario. Maybe it is even something scarier where you are trapped
        in a Kid's Pizza store with animatronics trying to come to life and get you!
    </Text>
    <Text>
        There are so many different settings that games or stories might take place but the first thing you should figure out
        is what kind of "genre" the setting is in. Genre is a term that generally means the particular "style" and
        "world" of the game or story. By knowing your genre you know what places <i>could</i> be possible and what places 
        wouldn't be possible. you wouldn't expect to see a space level in a fantasy game like Skyrim!
    </Text>
    <Text>
        To help the user figure out what genre the setting is in, let's give our users a list of options to help them
        generate their own ideas for a genre. You can use the following list as a base but feel free to add more if you want!
    </Text>
    <Note>
        <b>Extra Challenge!</b><br>
        Can you figure out how to add bullet points to your list? Hint: You should check out the <b>@AsciiArt.PageRef.Name</b> lesson
        for a possible value that might work!
    </Note>
    <MudList>
        <MudListItem Avatar="@Icons.Filled.MenuBook">Fantasy</MudListItem>
        <MudListItem Avatar="@Icons.Filled.MenuBook">Horror</MudListItem>
        <MudListItem Avatar="@Icons.Filled.MenuBook">Adventure</MudListItem>
        <MudListItem Avatar="@Icons.Filled.MenuBook">Sci-fi</MudListItem>
        <MudListItem Avatar="@Icons.Filled.MenuBook">Post-Apocalyptic</MudListItem>
        <MudListItem Avatar="@Icons.Filled.MenuBook">Mystery</MudListItem>
    </MudList>
</Section>
    <TaskItem Name="Create Project">Create a project called "Setting Builder"</TaskItem>
    <TaskItem Name="Create Introduction">Create an introduction to tell the user what your program is.</TaskItem>
    <TaskItem Name="Ask for Genre">Display a list of genres to help them out.</TaskItem>
    <TaskItem Name="Ask for Genre">Prompt the user for a genre input.</TaskItem>
    <TaskItem Name="Store user Input">Store the users input as "genreInput".</TaskItem>

<Section Title="Somewhere to call home.">
    <Text>
        Great job! You have a start to your setting builder! You'll need to start thinking about the details of our program 
        as if we were building our own setting. When we think of a city what is the first thing that comes to mind? 
        For me, it is how big of a city is it? Is it filled with skyscrapes that cut the clouds or is it 
        closer to a small town with farms full of crops ready to be harvested as far as the eye can see?
    </Text>
    <Text>
        Next, ask the user ask the user how big their city or town is going to be. Below is a list of different city sizes that might
        help the user decided if their place is a city, town or something different.
    </Text>

    <CitySizes/>

    <TaskItem Name="Ask for city or town size">Create a prompt to the user for the city or town type.</TaskItem>
    <TaskItem Name="Display Location Sizes">Display a list of possible sizes to help user pick the size of their location.</TaskItem>
    <TaskItem Name="Store location size">Store the users input as "locationType".</TaskItem>

    <Text>
        It might also be helpful at this point to capture just how many people are in this town or area! The population of a particular
        location in a game might increase or decrease over the cyourse of the game but for now you are just going to get a starting population.
    </Text>

    <TaskItem Name="Ask for population">Create a prompt to the user for the location population.</TaskItem>
    <TaskItem Name="Store location population">Store the location population as an <b>integer</b></TaskItem>

    <Text>
        You are well on your way to make your first location in a game! What you need now is to build the area or "geography" around your
        city. When you think of the location what kind of natural reasources surround it? Is it a small village in the center of a forest?
        A colony in space surrounded by asteroid fields? An underground civilization built within a mine filled with enormous crystals?
    </Text>
    <Text>
        You may also want to know what natural resources surround the location! Is is close to the ocean? Are there a lot of animals in the area
        for hunting? Perhaps it is in a metropolis surrounded by nothing but desert?
    </Text>

    <TaskItem Name="Ask for geography">Create a prompt to the user for the geography.</TaskItem>
    <TaskItem Name="Store geography">Store the geography of the location as "geography".</TaskItem>
    <TaskItem Name="Ask for geography">Create a prompt to the user for the natural resyources around the location.</TaskItem>
    <TaskItem Name="Store natural resources">Store the natural resyources as "naturalResyources".</TaskItem>

    <Section Title="Displaying the information">
    <Text>
        Wow! You've got a lot of information going now! I think it is about time to start looking at how to display the information
        in a way that looks good for the user. While you could just display the information out as "information: ", "user input" format,
        it might be a little hard to read the information. Especially if you want to add more information.
    </Text>
    <Text>
        You could consider changing the color of the information in each row to make it a little easier to read! Or perhaps
        changing the format for the information.
    </Text>

    <TaskItem Name="Display Information">Display the information out to the user.</TaskItem>
    <TaskItem Name="Alternate Colors">Alternate the colors displayed on each line to the user to make it easier to read.</TaskItem>

    </Section>
    <Section Title="What's Next">
    <Text>
        By the end of this project your Display out should look something like this!
    </Text>
    <CodeBlock ReplIt="NobodyOdyssues/SettingBuilder"> City Builder</CodeBlock>
    </Section>
    <Section Title="Wrapping Up">
            <Adventure Portrait="@Portraits.Ryan_1">
        <Item>
            <AdventureDialog>
                    If you've come this far it means that you've completed the project!
                    You put in a lot of hardwork and should be proud of what you've created!
                    Now that I have this I can get started on building a city for Captian Coder!
            </AdventureDialog>
        </Item>
        <Item>
            <AdventureDialog>
                    In this lesson you practiced using <Code>Console.WriteLine</Code>,
                    <Code>Console.ReadLine</Code>, & working with <Code>variables</Code> to create
                    an entire program!
            </AdventureDialog>
        </Item>
        <Item>
            <AdventureDialog>
                    Even though the Activity is done, you should feel free to explore the program
                    and make it your own. Explore adding new questions, colors, formatting to the program until
                    your program is something entirely unique to you.
            </AdventureDialog>
        </Item>
        <Item>
            <AdventureDialog>
                    Even though the Activity is done, you should feel free to explore the program
                    and make it your own. Explore adding new questions, colors, formatting to the program until
                    your program is something entirely unique to you.
            </AdventureDialog>
        </Item>
        <Item>
            <AdventureDialog>
                    Keep in mind that there are a lot more types than just strings and integers. If you'd like to
                    learn about more types and even how we can convert one type to another, you should checkout
                    <b>@VariableBasics.PageRef.Name</b>. If you are looking to develop your ability to use integers
                    and explore new programs through Math functions, checkout <b><b>@VariableBasics.PageRef.Name</b></b>
            </AdventureDialog>
        </Item>
    </Adventure>
    </Section>
</Section>

@code
{
    public static readonly PageRef PageRef = new PageRef("Setting Builder", "/activities/setting-builder", 3, "Activities");
}