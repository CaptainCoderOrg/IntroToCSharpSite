@inject NavigationManager NavigationManager
@inject Blazored.LocalStorage.ILocalStorageService localStorage

<MudExpansionPanel id="@Title" @bind-IsExpanded="@IsExpanded" onclick="@(new Action(OnExpand))">
    <TitleContent>
        @if(!IsSubSection) {
            <h2 class="pa-2" style="@Style">@Title</h2>
        } else {
            <h3 class="pa-2" style="@Style">@Title</h3>
        }
    </TitleContent>
    <ChildContent>
        <MudText Class="px-2 ma-0">@ChildContent</MudText>
    </ChildContent>
</MudExpansionPanel>
@code
{
    [Parameter]
    public bool IsSubSection { get; set; } = false;
    [Parameter, EditorRequired]
    public string Title {get; set;} = null!;
    [Parameter]
    public RenderFragment ChildContent {get; set;} = null!;
    [Parameter]
    public bool StartClosed {get; set;} = false;
    private string Background = "background: var(--mud-palette-appbar-background);";
    private string Color = "color: var(--mud-palette-appbar-text);";
    private string Style => $"{Background} {Color}";
    private bool IsExpanded = true;
    private string Key => NavigationManager.Uri.Substring(NavigationManager.BaseUri.Length) + Title;
    protected async override void OnInitialized()
    {
        bool contains = await localStorage.ContainKeyAsync(Key);
        if (contains)
        {
            IsExpanded = await localStorage.GetItemAsync<bool>(Key);
            StateHasChanged();
        }
    }

    private async void OnExpand()
    {
        await localStorage.SetItemAsync<bool>(Key, IsExpanded);
    }
}