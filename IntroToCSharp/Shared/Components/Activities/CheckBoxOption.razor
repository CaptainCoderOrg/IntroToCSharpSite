<MudPaper Class="pa-3 d-flex align-content-center" Style="@GetStyle()">
    <MudCheckBox Color="Color.Dark" @bind-Checked="@IsChecked" Label="@Text"></MudCheckBox>
</MudPaper>
@code {
    [Parameter]
    public string Text { get; set; }
    [Parameter]
    public bool IsCorrect { get; set; }
    [Parameter]
    public bool IsChecked { get; set; } = false;
    public bool IsSubmitted { get; set; } = false;
    public bool IsSubmissionCorrect => (this.IsChecked && this.IsCorrect) || (!this.IsChecked && !this.IsCorrect);

    [CascadingParameter]
    public MultipleChoiceQuestion Parent { get; set; }

    protected override void OnInitialized()
    {
        base.OnInitialized();
        this.Parent.AddOption(this);
    }

    private string GetStyle()
    {
        if (!this.IsSubmitted || !this.IsChecked) return string.Empty;

        // Incorrect answers should highlight red
        if (this.IsCorrect) return $"background: {Themes.s_CSharpTheme.Palette.SuccessLighten.ToString()}; color: {Themes.s_CSharpTheme.Palette.Black.ToString()}";;
        // if (!this.IsCorrect) 
        return $"background: {Themes.s_CSharpTheme.Palette.ErrorLighten.ToString()}; color: {Themes.s_CSharpTheme.Palette.White.ToString()}";

    }


    public bool Submit()
    {
        this.IsSubmitted = true;
        return IsSubmissionCorrect;
    }
}
