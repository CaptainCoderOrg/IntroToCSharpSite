@inject NavigationManager NavigationManager
<MudListItem Icon="@Icons.Filled.QuestionAnswer" OnClick="@NotifyLoggedIn">
    <MudTextField Label="@Text" @bind-Value="Answer" @bind-Disabled="@IsDisabled"></MudTextField>
</MudListItem>
@code
{
    private bool IsDisabled = true;
    private string _answer = String.Empty;

    [CascadingParameter]
    public Questions Parent {get; set;} = null!;
    
    [Parameter, EditorRequired]
    public string Text {get; set;} = null!;
    
    private string Answer {
        get => _answer;
        set
        {
            if (_answer == value) return;
            _answer = value;
            UpdateAndSaveAnswer();
        }
    }

    private string Path => $"questions/{NavigationManager.GetRoute()}/{Utils.SanitizeDBName(Parent.Title)}/{Utils.SanitizeDBName(Text)}";

    protected override void OnInitialized()
    {
        UserService.Service.OnUserChange += HandleUserChange;
    }

    private void HandleUserChange(User userData)
    {
        if (userData.IsLoggedIn)
        {
            IsDisabled = false;
            if(UserService.Service.TryGetQuestionAnswer(Path, out DataReference<string> answer)){
                answer.DataChanged += val =>
                {
                    _answer = val!;
                    StateHasChanged();
                };
            }
        }
        else
        {
            IsDisabled = true;
        }
        StateHasChanged();
    }

    private void UpdateAndSaveAnswer()
    {
        UserService.Service.UpdateQuestionAnswer(Path, _answer);
    }

    private async void NotifyLoggedIn()
    {
        if (IsDisabled) await NotificationService.Service.Add("Log in to save your answers.", Severity.Info);
    }
}