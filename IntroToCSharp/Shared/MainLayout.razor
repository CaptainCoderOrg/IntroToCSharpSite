@inherits LayoutComponentBase
@inject IJSRuntime JS
@inject ISnackbar Snackbar

@* MudBlazor Dependencies *@
<MudThemeProvider @ref="_mudThemeProvider" Theme="Themes.s_CSharpTheme" @bind-IsDarkMode="@IsDarkMode" />
<MudDialogProvider />
<MudSnackbarProvider />

<TopMenu Main="this" />

<MudDrawerContainer Class="mt-13">
    <NavMenu Main="this" />

    <div class="pa-4">
        @Body
    </div>

</MudDrawerContainer>
@code
{
    private static IJSRuntime? s_JS;
    private static ISnackbar? s_SnackBar;
    private static bool s_isInit = false;
    private static event Action<IJSRuntime, ISnackbar>? s_onInit;
    private MudThemeProvider _mudThemeProvider = null!;
    private bool _isDarkMode = true;
    public bool IsNavMenuOpen = true;
    public User UserData = new User("null");
    public bool IsDarkMode
    {
        get => _isDarkMode;
        set
        {
            if (value == _isDarkMode) return;
            _isDarkMode = value;
            StateHasChanged();
        }
    }

    public static event Action<IJSRuntime, ISnackbar> OnInit
    {
        add
        {
            if (value == null) throw new ArgumentNullException("Cannot add null event handler.");
            if (s_isInit)
            {
                value.Invoke(s_JS!, s_SnackBar!);
            }
            s_onInit += value;
        }
        remove => s_onInit -= value;
    }

    protected override void OnInitialized()
    {
        s_onInit?.Invoke(JS, Snackbar);
        s_JS = JS;
        s_SnackBar = Snackbar;
        s_isInit = true;
        UserService.Service.OnLogin += UpdateUser;
        UserService.Service.OnLogout += () => UpdateUser(new User("null"));
    }

    public void UpdateUser(User user)
    {
        UserData = user;
        InvokeAsync(StateHasChanged);
    }

    protected override async Task OnAfterRenderAsync(bool firstRender)
    {
        if (firstRender)
        {
            IsDarkMode = await _mudThemeProvider.GetSystemPreference();
        }
    }
    public void ToggleNavMenu() => IsNavMenuOpen = !IsNavMenuOpen;
}