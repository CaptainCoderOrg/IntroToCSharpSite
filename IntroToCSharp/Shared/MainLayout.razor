@inherits LayoutComponentBase
@inject IJSRuntime JS
<RadzenDialog/>
<RadzenNotification/>
<RadzenContextMenu/>
<RadzenTooltip/>
<div class="page">
    <div class="sidebar">
        <NavMenu />
    </div>

    <div class="main">
        <div class="top-row px-4">
            @if (UserData.IsLoggedIn)
            {
                <span>@UserData.DisplayName <a href="javascript:void(0);" @onclick="Logout">Logout</a></span>
            }
            else
            {
                <a href="javascript:void(0);" @onclick="Login" class="ml-md-auto">Login</a>
            }
        </div>

        <div class="content px-4">
            @Body
        </div>
    </div>
</div>

@code
{
    public User UserData = new User("null");
    public async Task Login() => await JS.InvokeVoidAsync("firebaseLogin");
    public async Task Logout() => await JS.InvokeVoidAsync("firebaseLogout");

    protected override async Task OnInitializedAsync()
    {
        // On initialization, register this object to be notified when the user changes
        await JS.InvokeVoidAsync("onAuthStateChanged", DotNetObjectReference.Create(this));
    }

    [JSInvokable]
    /// Callback when the user changes. The response is a JSON object or "null" if the user is
    /// not authenticated.
    public void UpdateUser(string response)
    {
        UserData = new User(response);
        InvokeAsync(StateHasChanged);
    }
}