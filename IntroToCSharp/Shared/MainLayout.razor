@inherits LayoutComponentBase
@inject IJSRuntime JS

@* MudBlazor Dependencies *@
<MudThemeProvider Theme="Themes.s_CSharpTheme"/>
<MudDialogProvider/>
<MudSnackbarProvider/>


<MudDrawerContainer>
    <MudDrawer @bind-Open="@IsNavMenuOpen" Elevation="0" Variant="@DrawerVariant.Persistent" Color="Color.Primary">
        <MudDrawerHeader>
            <MudText Typo="Typo.h6">Intro To C#</MudText>
        </MudDrawerHeader>
        <NavMenu />
    </MudDrawer>

    <TopMenu Main="this" />

    <div class="content px-4">
        @Body
    </div>

</MudDrawerContainer>
@code
{
    public bool IsNavMenuOpen = true;
    public User UserData = new User("null");
    public async Task Login() => await JS.InvokeVoidAsync("firebaseLogin");
    public async Task Logout() => await JS.InvokeVoidAsync("firebaseLogout");

    protected override async Task OnInitializedAsync()
    {
        // On initialization, register this object to be notified when the user changes
        await JS.InvokeVoidAsync("onAuthStateChanged", DotNetObjectReference.Create(this));
    }

    [JSInvokable]
    /// Callback when the user changes. The response is a JSON object or "null" if the user is
    /// not authenticated.
    public void UpdateUser(string response)
    {
        UserData = new User(response);
        InvokeAsync(StateHasChanged);
    }

    public void ToggleNavMenu() => IsNavMenuOpen = !IsNavMenuOpen;
}