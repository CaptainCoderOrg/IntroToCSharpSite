@inject IDialogService DialogService
<MudAppBar Elevation="25">
    <MudIconButton Icon="@Icons.Material.Outlined.Menu" Color="Color.Inherit" OnClick="@Main.ToggleNavMenu"
        Edge="Edge.Start" />
    <MudSpacer />
    <MudToggleIconButton @bind-Toggled="@Main.IsDarkMode" ToggledIcon="@Icons.Material.Outlined.LightMode"
        Icon="@Icons.Material.Outlined.DarkMode" Color="Color.Inherit" />
    <MudIconButton Icon="@Icons.Material.Filled.Storefront" Color="Color.Inherit" Href="/store" />

    <MudSpacer />
    @if (UserData.IsLoggedIn)
    {
        <Gold />
        <ExperienceBar />
        <MudElement>@UserData.DisplayName </MudElement>
        <MudButton OnClick="@(() => UserStatsDialog.Show(DialogService))">
            <MudAvatar Color="Color.Secondary" OnClick>@UserData.AvatarLetter</MudAvatar>
        </MudButton>
    }
    else
    {
        <MudButton StartIcon="@Icons.Filled.Login" Variant="Variant.Filled" Color="Color.Tertiary" OnClick="@(() => LoginDialog.Show(DialogService))">Login</MudButton>
    }
    </MudAppBar>

    @code
    {
    [Parameter, EditorRequired]
    public MainLayout Main { get; set; } = null!;
    // The user's data
    public User UserData = User.NoUser;
    private void UpdateUser(User user)
    {
        UserData = user;
        InvokeAsync(StateHasChanged);
    }
    /// <inheritdoc/>
    protected override void OnInitialized()
    {
        UserService.Service.OnUserChange += UpdateUser;
    }
}